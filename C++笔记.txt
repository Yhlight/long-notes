//////////////////////////////////////////////////////////////
从C语言过渡过来的，没什么能讲的
这边不打算省略有关于C语言那部分
不然可能会因为缺少内容而不会这个知识点
换句话来说，这边你要再学一次C语言那边学过的部分内容
这边会标注和C语言的差别

相关教学视频链接：
【黑马程序员匠心之作|C++教程从0到1入门编程,学习编程不再难】 
https://www.bilibili.com/video/BV1et411b73Z/?p=7&share_source=copy_web&vd_source=973cddc40f85d57f3463fcbd0d6af605

//////////////////////////////////////////////////////////////
如何创建一个C++语言项目
VS2022新建项目，空项目，解决方案管理器，源文件，新建项
C++文件，cpp格式

C++语言的基础结构
#include <iostream>
using namespace std;

int main()
{
	return 0;
}
这就是C++的基础结构，和C语言是很类似的

打印一个HelloWorld
#include <iostream>
using namespace std;

int main()
{
	cout << "HelloWorld" << endl;
	return 0;
}
和C语言不同，C++使用更为复杂的形式
C++可以用printf，但是推荐使用C++的输入输出

内容扩展：
endl并不是'\n'，不要直接当成\n，endl只是包含了\n的效果

//////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////
注释
对单行代码或者整体代码进行解释说明

单行注释 //
用来解释单行代码或使某部分代码不被编译器读取
// 后面跟的内容不会被编译器读取
在VS中，你可以按CTRL+K,CTRL+C将选中的代码全部注释
注意，这是组合，先按CTRL+K再CTRL+C

取消注释
CTRL+K，CTRL+U

多行注释（C语言也能用）
这个C语言也能用，不过没多少人用这个注释，不方便
我在C语言那边没有讲，C++这边我拿出来讲一下，用就算了
/*          */  两个符号间的代码全部被注释
如下
/*
int main()
{
	cout << "helloworld" << endl;
	return 0;
}
*/

//////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////
变量
在C++中，所有的数据都存在内存中
变量的意义在于给一段指定的内存起名，方便操作这段内存

变量的创建与初始化
数据类型 变量名 变量值
int a = 10;
和C语言一样

打印变量
#include <iostream>
using namespace std;

int main()
{
	int a = 10;
	cout << "a=" << a << endl;
	return 0;
}

常量
记录程序中不可更改的数据

常量的创建
和C语言那部分内容差不多
1.#define 宏常量
#define 常量名 常量值

2.const修饰的变量
const 数据类型 常量名 常量值

#include <iostream>
using namespace std;

#define day 7

int main()
{
	const int a = 10;
	return 0;
}

标识符命名规则
作用：C++规定给标识符（常量，变量）命名时，有一套自己的规则

1.标识符不能是关键字
2.标识符只能由字母，数字，下划线组成
3.第一个字符必须为字母或下划线
4.标识符中字母区分大小写
5.在实际运用中，标识符的命名尽可能做到见名字知意思

//////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////
数据类型
创建一个变量或常量时，必须指出相应的数据类型

数据类型存在意义
给变量分配合适的内存空间

整数类型（整型）
类型        空间大小    范围
short       2字节       -2^15 ~ 2^15-1
int         4字节       -2^31 ~ 2^31-1
long        4/8字节     -2^63 ~ 2^63-1
long long   8字节       -2^63 ~ 2^63-1

类型都是有相应的的范围的，如果所赋予的一个值超出了它的范围，会怎样？
short类型的范围是-32768 ~ 32767
#include <iostream>
using namespace std;

int main()
{
	short a = 32768;
	cout << "a=" << a << endl;
	return 0;
}
答案是-32768，也就是说，范围是一个环
像一个时钟一样
       0
  -1       1
-32768
	 32767

日常开发时使用int类型较多

sizeof关键字
sizeof关键字可以统计数据类型所占用的内存大小，单位字节
size(数据类型/变量)

浮点数类型（浮点型）
类型        空间大小     有效数字范围
float       4字节        7位有效数字
double      8字节        15-16位有效数字

float类型的变量赋值时，要带上"f"后缀，这是一个好习惯

（区分C语言）C++中，无论是float类型还是double类型
因为cout输出流的限制，都是显示6位有效数字的输出结果
想要获取更多的有效数字需要进行额外的配置

字符型
作用：存储字符
（区分C语言）C++无法使用char来存储字符串，C++使用string

字符：仅且一个字符组成并被单引号括起来的字符
'A','c','1','='

如何定义？
char ch = 'a';
在C/C++中，char类型占用一个字节

char类型本质上并不是把字符放进了变量里面
而是将对应的ASCII编码值存储进内存空间

怎么获取ASCII值
1.上网自己找ASCII表

2.利用强制类型转换获取
int a = (int)3.14

#include <iostream>
using namespace std;

int main()
{
	char ch = 'a';
	cout << (int)ch << endl;
	return 0;
}

转义字符（照抄C的，可以跳过）
例：
打印一个目录
#include <iostream>
using namespace std;

int main()
{
	cout << "c:\code\test.c\n" << endl;
	return 0;
}
实际打印结果为c:code  est.c
原因为\t转义字符的存在
解决办法为
	cout << "c:\code\\test.c\n" << endl;

\0  空字符
\a  引起电脑响铃（蜂鸣）
\b  空格
\f  进纸符
\n  用于换行
\r  回车
\t  水平制表符
\v  垂直制表符
\'  单引号
\"  双引号
\\  \
\ddd ddd表示1-3个八进制数字 如\130
这里打印出来的结果是X
原因是八进制的130转成了十进制，也就是88
再对应ASCII码值

\xdd  表示两个16进制数字
这里打印出来的是0
原因是16进制的130转成了十进制，也就是48
再对应ASCII码值